version: '3.7'
services:
    postgres:
        image: postgres:11-alpine
        restart: always
        environment:
            - POSTGRES_USER=airflow
            - POSTGRES_PASSWORD=airflow
            - POSTGRES_DB=airflow
        logging:
            options:
                max-size: 10m
                max-file: "3"
        volumes:
#            - "${PWD}/db-data:/var/lib/postgresql/data"
            - "/var/lib/postgresql/data"

    local-runner:
#        image: amazon/mwaa-local:2_2
        platform: "linux/amd64"
        build: .
        restart: always
        depends_on:
            - postgres
        environment:
            - LOAD_EX=n
            - EXECUTOR=Local
            - DAG_ECS_TAG_PREFIX=${TAG_PREFIX}
            - AWS_PROFILE=${AWS_PROFILE}
            - MWAA_IS_LOCAL=${RUN_LOCAL:-1}
            - 'AIRFLOW__SECRETS__BACKEND_KWARGS={"connections_prefix": "/${DEPLOYMENT:-dev}/airflow/connections", "variables_prefix": "/${DEPLOYMENT:-dev}/airflow/variables"}'
        logging:
            options:
                max-size: 10m
                max-file: "3"
        volumes:
            - "${DAG_DIR:-./dags}:/usr/local/airflow/dags"
            - "${PWD}/plugins:/usr/local/airflow/plugins"
#            - "${PWD}/requirements:/usr/local/airflow/requirements"
            - ~/.aws:/usr/local/airflow/.aws:ro
            - ~/.aws:/root/.aws:ro
            - //var/run/docker.sock:/var/run/docker.sock
            - /usr/local/airflow/.cache/pip
            - /root/.cache/pip
        user: root
        ports:
            - "8080:8080"
        command: local-runner
        tmpfs:
            - /tmp
        healthcheck:
            test: ["CMD-SHELL", "[ -f /usr/local/airflow/airflow-webserver.pid ]"]
            interval: 30s
            timeout: 30s
            retries: 3
        env_file:
            - ./config/.env.localrunner